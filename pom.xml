<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.myproject</groupId>
	<artifactId>esb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<!-- CAISO dependencies -->
		<caiso-camel-shared-version>0.7.1-SNAPSHOT</caiso-camel-shared-version>
		<caiso-esb-common-version>0.7.1-SNAPSHOT</caiso-esb-common-version>

		<spring-boot-version>1.4.1.RELEASE</spring-boot-version>
		<spring-camel-version>2.18.0</spring-camel-version>

		<apache-activemq-version>5.13.4</apache-activemq-version>
		<maven-resources-plugin>3.0.1</maven-resources-plugin>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<project.timestamp>${maven.build.timestamp}</project.timestamp>
		<project.builtBy>${user.name}</project.builtBy>
		<banner-title>${project.groupId}.${project.artifactId}</banner-title>
		<banner-version>v${project.version}</banner-version>
	</properties>

	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>Internal Releases to Nexus</name>
			<url>http://dev-tools.ete.wepex.net/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>Internal Snapshot to Nexus</name>
			<url>http://dev-tools.ete.wepex.net/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>3.1.2</version>
		</dependency>
		<!-- CAISO libraries -->
		<dependency>
			<groupId>caiso.esb</groupId>
			<artifactId>common</artifactId>
			<version>${caiso-esb-common-version}</version>
		</dependency>
		<dependency>
			<groupId>caiso.camel</groupId>
			<artifactId>shared</artifactId>
			<version>${caiso-camel-shared-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4</artifactId>
			<version>${spring-camel-version}</version>
		</dependency>
		<!-- Misc libraries -->
		<!-- connection pool to broker -->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
			<version>${apache-activemq-version}</version>
		</dependency>

		<!-- Apache Camel -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
			<version>${spring-camel-version}</version>
			<exclusions>
				<!-- we use log4j2 -->
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- camel servlet support to receive HTTP inbound -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-servlet</artifactId>
			<version>${spring-camel-version}</version>
		</dependency>
		<!-- activemq component in camel -->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-camel</artifactId>
			<version>${apache-activemq-version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
		<!-- for configuration annotations -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- test framework -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- spring parent defines versions used above as part of spring boot 
				version release -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring-boot-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.groupId}.${project.artifactId}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<archive>
						<manifestEntries>
							<itpd>dev</itpd>
							<Implementation-Title>${banner-title}</Implementation-Title>
							<Implementation-Version>${banner-version}</Implementation-Version>
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>/camel/**</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin}</version>
				<executions>

					<!-- Copy resources to distribution (dist) directory -->
					<execution>
						<id>copy-resources-dist</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dist</outputDirectory>
							<nonFilteredFileExtensions>
								<nonFilteredFileExtension>ods</nonFilteredFileExtension>
								<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
							</nonFilteredFileExtensions>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>**/banner.txt</exclude>
									</excludes>
								</resource>
								<resource>
									<directory>${project.build.directory}</directory>
									<excludes>
										<exclude>**/banner.txt</exclude>
									</excludes>
									<includes>
										<include>*.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
					<finalName>${project.build.finalName}</finalName>
					<classifier>dist</classifier>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>